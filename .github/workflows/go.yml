name: Go
on: [push]
jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Install libsqlite3-dev
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get -qq install libsqlite3-dev

      - name: Install libsqlite3 dll
        if: matrix.os == 'windows-latest'
        run: vcpkg install sqlite3:x64-windows

      - uses: actions/checkout@v1

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build unix
        if: matrix.os == 'ubuntu-latest'
        run: go build -v .

      - name: Build windows
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          set CGO_CPPFLAGS=-IC:/vcpkg/installed/x64-windows/include
          set CGO_LDFLAGS=-LC:/vcpkg/installed/x64-windows/bin
          rem set LIBRARY_PATH=%LIBRARY_PATH%;C:\vcpkg\installed\x64-windows\bin
          go build -v .

      - name: Test
        if: matrix.os == 'ubuntu-latest'
        run: |
          # FIXME
          export CGO_LDFLAGS="-Wl,--allow-multiple-definition"
          GODEBUG=cgocheck=0 go test -v -tags all .

      - name: Test
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          rem try to make cgo happy
          set CGO_CPPFLAGS=-IC:/vcpkg/installed/x64-windows/include
          rem set CPATH=%CPATH%;C:\vcpkg\installed\x64-windows\include
          set CGO_LDFLAGS=-LC:/vcpkg/installed/x64-windows/bin -Wl,--allow-multiple-definition
          rem set PATH=%PATH%;C:\vcpkg\installed\x64-windows\bin
          rem set LIBRARY_PATH=%LIBRARY_PATH%;C:\vcpkg\installed\x64-windows\bin
          set GODEBUG=cgocheck=0
          go test -v -tags all .
